
#exec "/opt/nipodialer/conf/bin/outbound_nodelay.php"

[custom-nipo-dialer]
exten =>  whisper,1,Verbose(1, == NIPO: whisper to agent ${AGENTNAME})
          same => n,UserEvent(NIPOPlayChannel,Agent: ${AGENTNAME},Channel: ${CHANNEL(name)}, ActionID: ${ACTIONID})
          same => n,ChanSpy(${SPYDEVICE},BqV(2))
          same => n,Hangup()

exten =>  listen,1,Verbose(1, == NIPO: whisper to agent ${AGENTNAME})
          same => n,UserEvent(NIPOListenChannel,Agent: ${AGENTNAME},Channel: ${CHANNEL(name)}, ActionID: ${ACTIONID})
          same => n,ChanSpy(${SPYDEVICE},qV(2))
          same => n,Hangup()

exten => playfile,1,Set(CHANNEL(hangup_handler_push)=nipo-play-ack,s,1)
          same => n,Playback(${PLAYFILE})
          same => n,Hangup()

[nipo-play-ack]
exten => s,1,NoOp()
 same => n,UserEvent(NIPOPlayAck, ActionID: ${ACTIONID}, NipoID: ${ID})

[nipo-call-agent]
exten = _X.,1,NoOp()
 same = n,AgentRequest(${EXTEN})
 same = n,Congestion()


[nipo-login]
exten =>  _X.,1,Set(CHANNEL(language)=${AGENTLANG})
 same => n,Set(CHANNEL(hangup_handler_push)=nipo-login,connected,1)
 same => n,Set(CHANNEL(dtmf_features)=H)
 same => n,Set(AGENTLOGIN=${EXTEN:-${EXTLEN}})
 same => n,Answer()
 same => n,AgentLogin(${EXTEN:-${EXTLEN}},s)
 same => n,Hangup()

exten => connected,1,NoOp()
 same => n,UserEvent(NIPOAgentChannel,Agent: ${FULLAGENT},Channel: ${AGENT(${AGENTLOGIN}:fullchannel)},ActionID: ${ACTIONID}) # Set agent channel
 same => n,UserEvent(NIPOAgentLogin,Agent: ${FULLAGENT},Channel: ${AGENT(${AGENTLOGIN}:fullchannel)},ActionID: ${ACTIONID})   # AgentLogin replacemant for Asterisk13
 same => n,Set(DB(NIPOLOGIN/${EXTEN:-${EXTLEN}})=${CALLERID(num)})
 same => n,Return()

exten => failed,1,NoOp()
 same => n,UserEvent(NIPOAgentFailed,Agent: ${FULLAGENT},ActionID: ${ACTIONID})				    # Track failed calls
 same => n,Hangup()



[from-internal-nipo]
exten => _55*X.,1,Set(AGENT=${EXTEN:4})
exten => _55*X.,n,Set(CALLERID=${CALLERID(num)})
exten => _55*X.,n,Set(DB(NIPOAGENT/${AGENT})=${CALLERID})

exten => _55,1,Set(AGENT=${EXTEN:4})
exten => _55,n,Set(DB(NIPOAGENT/${AGENT})=${CALLERID})


; ==================================================================================================================================
[outgoing-nipo-preview]
exten => _X.,1,Set(CDR(accountcode)=${AGENTCID})
exten => _X.,n,Set(GROUP(cpg)=${CAMPAIGN})
exten => _X.,n,Set(MIXMON_FILE=${INTERVIEW}-${AGENTNAMESHORT}-${AGENTCID}-${STRFTIME(${EPOCH},,%C%y%m%d%H%M)}-PREVIEW${EXTEN}-${NIPOIP}_${CAMPAIGN}-${UNIQUEID})
exten => _X.,n,Set(MIXMON_POST=/opt/nipodialer/nipo_mixstereo.sh ${MIXMON_FILE})
exten => _X.,n,MixMonitor(${MIXMON_FILE}.${MIXMON_FORMAT},br(${MIXMON_FILE}-r.${MIXMON_FORMAT})t(${MIXMON_FILE}-t.${MIXMON_FORMAT}),${MIXMON_POST})
exten => _X.,n,Set(CDR(recording)=${MIXMON_FILE})
exten => _X.,n(cont),UserEvent(NIPOAgentChannel,Agent: ${AGENTNAME},Channel: ${CHANNEL(name)},ActionID: ${ACTIONID})
exten => _X.,n,Dial(Local/${EXTEN}@from-internal/n,,M(preview-answer))
exten => _X.,n,DumpChan()
exten => _X.,n,Goto(s-${DIALSTATUS},1)

exten => s-BUSY,1,UserEvent(NIPODialState,Agent: ${AGENTNAME},State: busy,ActionID: ${ACTIONID})
exten => s-BUSY,n,Busy()

exten => s-CONGESTION,1,UserEvent(NIPODialState,Agent: ${AGENTNAME},State: congestion,ActionID: ${ACTIONID})
exten => s-CONGESTION,n,Congestion()

exten => _s-.,1,Hangup()

exten => h,1,ExecIf($["${DIALSTATUS}" = "ANSWER"]?UserEvent(NIPODialState,Agent: ${AGENTNAME},State: hangup, ActionID: ${ACTIONID}))
exten => h,n,Hangup()

; ==================================================================================================================================
[outgoing-nipo-predictive]
include => outgoing-nipo-power

[outgoing-nipo-power]
exten => _X.,1,Set(GROUP(cpg)=${NIPOQUEUE})
exten => _X.,n,Set(__NUMBERID=1) ;  Test
exten => _X.,n,Dial(Local/${EXTEN}@outbound-allroutes-dialer/n,28,M(power-answer))
exten => _X.,n,Set(DBCAUSE=${DB_DELETE(NUMBER/${ACTIONID}/cause)})
exten => _X.,n,Set(DBSIPCAUSE=${DB_DELETE(NUMBER/${ACTIONID}/sipcause)})
exten => _X.,n,DumpChan()
exten => _X.,n,Goto(s-${DIALSTATUS},1)

exten => s-BUSY,1,UserEvent(NIPOPowerDialState,NumberID: ${NUMBERID},CauseCode: ${DBCAUSE},SipCode: ${DBSIPCAUSE},State: busy,ActionID: ${ACTIONID})
exten => s-BUSY,n,Busy()
exten => s-CONGESTION,1,UserEvent(NIPOPowerDialState,NumberID: ${NUMBERID},CauseCode: ${DBCAUSE},SipCode: ${DBSIPCAUSE},State: congestion,ActionID: ${ACTIONID})
exten => s-CONGESTION,n,Congestion()
exten => s-CHANUNAVAIL,1,UserEvent(NIPOPowerDialState,NumberID: ${NUMBERID},CauseCode: ${DBCAUSE},SipCode: ${DBSIPCAUSE},State: congestion,ActionID: ${ACTIONID})
exten => s-CHANUNAVAIL,n,Congestion()
exten => _s-.,1,Hangup()

exten => h,1,NoOp(Status is ${DIALSTATUS})
exten => h,n,ExecIf($["${DIALSTATUS}" = "ANSWER"]?UserEvent(NIPOPowerDialState,NumberID: ${NUMBERID},State: hangup,ActionID: ${ACTIONID}))
exten => h,n,ExecIf($["${DIALSTATUS}" = "NOANSWER"]?UserEvent(NIPOPowerDialState,NumberID: ${NUMBERID},State: noanswer,ActionID: ${ACTIONID}))
exten => h,n,ExecIf($["${DIALSTATUS}" = "CANCEL"]?UserEvent(NIPOPowerDialState,NumberID: ${NUMBERID},State: noanswer,ActionID: ${ACTIONID}))
exten => h,n,Hangup


[sub-queue-record]
exten => s,1,NoOp()
exten => s,n,Set(AGENT=${FILTER(0-9,${MEMBERINTERFACE})})
exten => s,n,Set(MIXMON_FORMAT=wav)
exten => s,n,Set(MIXMON_FILE=${INTERVIEW}-${AGENT}-${DB(NIPOLOGIN/${AGENT})}-${MONITOR_FILE})
exten => s,n,Set(MIXMON_POST=/opt/nipodialer/nipo_mixstereo.sh ${MIXMON_FILE})
exten => s,n,MixMonitor(${MIXMON_FILE}.${MIXMON_FORMAT},br(${MIXMON_FILE}-r.${MIXMON_FORMAT})t(${MIXMON_FILE}-t.${MIXMON_FORMAT}),${MIXMON_POST})
exten => s,n,Set(CDR(recordingfile)=${MIXMON_FILE})
exten => s,n,Set(INERVIEW=)
exten => s,n,Return()


[outgoing-nipo-queue]
exten => s,1,Set(MACHINE=0)
;exten => s,n,GoSub(sub-nipo-amd,s,1)
exten => s,n,GotoIf($["${MACHINE}" = "1"]?hang)
exten => s,n,DumpChan()
exten => s,n,Set(__AAA=${NIPOQUEUE})
exten => s,n,Set(__MONITOR_FILE=${STRFTIME(${EPOCH},,%C%y%m%d%H%M)}-POWER${NUMBER}-${AAA}-${UNIQUEID})
exten => s,n,Set(CAMPAIGN=)
exten => s,n,Set(NUMBERID=)
exten => s,n,Set(NUMBER=)
exten => s,n,Set(NIPOQUEUE=)
exten => s,n,Queue(${AAA},hH,,,5,,,sub-queue-record)
exten => s,n,ExecIf($["${QUEUESTATUS}" = "TIMEOUT"]?UserEvent(NIPOPowerDialState,State: abadon,ActionID: ${ACTIONID},Queue: ${AAA}))
;exten => s,n,ExecIf($["${QUEUESTATUS}" = "TIMEOUT"]?System(/var/www/html/dialer/missed_log.sh ${AAA} ${UNIQUEID} ${CHANNEL(callid)})) ; Debug
exten => s,n(hang),Hangup()

exten => h,1,NoOp(Queue status /h/ ${QUEUESTATUS}) ; TODO: increase abadoned on TIMEOUT


[sub-nipo-amd]
exten => s,1,AMD
exten => s,n,NoOp("AMD STATUS IS :"${AMDSTATUS}"...CAUSE:"${AMDCAUSE})
exten => s,n,GotoIf($[${AMDSTATUS}=HUMAN]?humn:mach)
exten => s,n(mach),WaitForSilence(3000,1,180)
exten => s,n,NoOp("WAITSTATUS:"${WAITSTATUS})
exten => s,n,NoOp("THIS IS A MACHINE.")
exten => s,n,Set(MACHINE=1)
exten => s,n,Return
exten => s,n(humn),WaitForSilence(250,1,180)
exten => s,n,NoOp("WAITSTATUS:"${WAITSTATUS})
exten => s,n,NoOp("THIS IS A HUMAN.")
exten => s,n,Set(MACHINE=0)
exten => s,n,Return


; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[macro-preview-answer]
exten => s,1,UserEvent(NIPODialState,Agent: ${AGENTNAME},State: answer,ActionID: ${ACTIONID},Chanremote: ${CDR(dstchannel)}, Chanagent: ${CDR(channel)})
exten => s,n,MacroExit()

; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[macro-power-answer]
exten => s,1,UserEvent(NIPODialState,NumberID: ${NUMBERID},State: answer,ActionID: ${ACTIONID},Chanagent: ${CDR(dstchannel)}, Chanremote: ${CDR(channel)})
exten => s,n,MacroExit()
